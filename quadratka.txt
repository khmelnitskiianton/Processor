in
in
in
pop rcx
pop rbx
pop rax                     ;вводим все в регистры

call check_a_null           ;пошла проверка на не квадратное ур-ие

call D                      ;если не ноль то начинаем вычислять D

push 0
push rdx
jb no_roots                 ;если D < 0 то нет корней

push 0
push rdx
je one_root                 ;Если D = 0 то один корень

push 0
push rdx
ja two_roots                ;Если D > 0 то два корня

hlt

two_roots:
call x1
call x2
push 10
push 50
push 61
push 78
outc
outc
outc
outc
out
out
hlt

no_roots:
push 10
push 48
push 61
push 78
outc
outc
outc
outc
hlt

one_root:
call x1
push 10
push 49
push 61
push 78
outc
outc
outc
outc
out
hlt

x1:
push 0
push rbx
sub
push rdx
sqrt
add
push 2
push rax
mul
div
ret

x2:
push 0
push rbx
sub
push rdx
sqrt
sub
push 2
push rax
mul
div
ret

D:
push rbx
push rbx
mul
push 4
push rax
push rcx
mul
mul
sub
pop rdx
ret

check_a_null:
push 0
push rax
jne a_not_null
call check_b_null
a_not_null:
ret

check_b_null:
push 0
push rbx
jne b_not_null
call check_c_null

b_not_null:
push 0
push rcx
sub
push rbx
div
push 10
push 49
push 61
push 78
outc
outc
outc
outc
out
hlt

check_c_null:
push 0
push rcx
jne c_not_null
push 10
push 79
push 78
push 61
push 78
outc
outc
outc
outc
outc
hlt

c_not_null:
push 10
push 48
push 61
push 78
outc
outc
outc
outc
hlt
